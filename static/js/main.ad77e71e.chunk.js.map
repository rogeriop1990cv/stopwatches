{"version":3,"sources":["fonts/dsDigital/DS-DIGIT.TTF","beedevlogo.png","sound_fx/alarm.mp3","Relogio.js","App.js","reportWebVitals.js","index.js"],"names":["Relogio","props","timerLogica","minutos","segundos","milesegundos","time","Date","setHours","setMinutes","setSeconds","setMilliseconds","contagemRegressiva","setInterval","getMilliseconds","min","toTimeString","slice","sec","timeString","setState","minutes","seconds","milliseconds","clearInterval","parado","retomar","reinicio","zerar","alarm","play","iniciar","state","minInput","secInput","started","parar","resetar","pause","reiniciar","onChangeInput","event","target","value","name","replace","onBlueInput","e","length","onFocusSelect","select","Audio","document","title","this","timer","className","inputter","type","maxLength","placeholder","onChange","onFocus","onBlur","onClick","retomado","zerado","src","logo","alt","srcset","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ad77e71e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/DS-DIGIT.063ff1f7.TTF\";","export default __webpack_public_path__ + \"static/media/beedevlogo.7be9f2b4.png\";","export default __webpack_public_path__ + \"static/media/alarm.215522b1.mp3\";","import React from 'react';\nimport logo from './beedevlogo.png'\nimport alarm from './sound_fx/alarm.mp3'\n\nexport default class Relogio extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      minInput: '00',\n      secInput: '00',\n      minutes: '00',\n      seconds: '00',\n      milliseconds: '000',\n      started: false,\n      parado: true,\n      reinicio: false,\n      retomar: false,\n      zerar: false,\n    }\n\n    this.alarm = new Audio(alarm);\n  }\n\n  timerLogica = (minutos, segundos, milesegundos = 1000) => {\n    const time = new Date(0)\n    time.setHours(0);\n    time.setMinutes(minutos)\n    time.setSeconds(segundos)\n    time.setMilliseconds(milesegundos)\n\n    this.contagemRegressiva = setInterval(() => {\n      time.setMilliseconds(time.getMilliseconds() - 4)\n      const min = time.toTimeString().slice(3, 5);\n      const sec = time.toTimeString().slice(6, 8);\n      const timeString = `${min}:${sec}`\n      this.setState({\n        minutes: min,\n        seconds: sec,\n        milliseconds: `${time.getMilliseconds()}`,\n      })\n      if (timeString === '00:00') {\n        clearInterval(this.contagemRegressiva)\n        this.setState({\n          time: `00:00`,\n          milliseconds: `000`,\n          parado: true,\n          retomar: false,\n          reinicio: true,\n          zerar: false,\n        })\n        this.alarm.play();\n      }\n    }, 1)\n  }\n\n  iniciar = () => {\n    const { minInput, secInput, milliseconds } = this.state;\n    if(minInput+secInput === '0000' ){\n      return\n    }\n    \n    this.setState({\n      started: true,\n      parado: false,\n      reinicio: true,\n      retomar: false,\n      zerar: false,\n    })\n    this.timerLogica(minInput, secInput, milliseconds)\n  }\n\n  parar = () => {\n    clearInterval(this.contagemRegressiva)\n    this.setState({\n      parado: true,\n      reinicio: true,\n      retomar: true,\n      zerar: false,\n    })\n  }\n\n  resetar = () => {\n    clearInterval(this.contagemRegressiva)\n    this.setState({\n      minutes: '00',\n      seconds: '00',\n      milliseconds: '000',\n      started: false,\n      parado: true,\n      reinicio: false,\n      retomar: false,\n      zerar: true,\n    })\n    this.alarm.pause();\n  }\n\n  retomar = () => {\n    const { minutes, seconds, milliseconds } = this.state;\n    if(minutes+seconds === '0000' ){\n      return\n    }\n\n    this.setState({\n      started: true,\n      parado: false,\n      reinicio: true,\n      retomar: false,\n      zerar: false,\n    })\n    this.timerLogica(minutes, seconds, milliseconds)\n  }\n\n  reiniciar = () => {\n    clearInterval(this.contagemRegressiva)\n    this.setState({\n      minutes: '00',\n      seconds: '00',\n      milliseconds: '000',\n      started: true,\n      parado: false,\n      reinicio: true,\n      retomar: false,\n      zerar: false,\n    })\n    const { minInput, secInput } = this.state;\n    this.timerLogica(minInput, secInput, 1);\n    this.alarm.pause();\n  }\n\n  zerar = () => {\n    this.setState({\n      minInput: '00',\n      secInput: '00',\n      minutes: '00',\n      seconds: '00',\n      milliseconds: '000',\n      started: false,\n      parado: true,\n      reinicio: false,\n      retomar: false,\n      zerar: false,\n    })\n  }\n\n  onChangeInput = (event) => {\n    let { value, name } = event.target;\n    // so aceita numeros.\n    value = value.replace(/[a-zA-Z]/g, '00')\n    this.setState({ [name]: value })\n    if (name === 'minutes') this.setState({ minInput: value });\n    if (name === 'seconds') this.setState({ secInput: value });\n  }\n\n  onBlueInput = (e) => {\n    let { value, name } = e.target;\n    if (value.length === 1) { value = `0${value}` }\n    if (value.length === 0) { value = `00` }\n    this.setState({ [name]: value })\n    if (name === 'minutes') this.setState({ minInput: value });\n    if (name === 'seconds') this.setState({ secInput: value });\n  }\n\n  onFocusSelect = (e) => {\n    e.target.select()\n  }\n\n  render() {\n    document.title = \"BeeOnTime\"\n    const { \n      minInput,\n      secInput,\n      minutes,\n      seconds,\n      started,\n      milliseconds,\n      parado,\n      reinicio,\n      retomar,\n      zerar,\n     } = this.state;\n\n    const timer = (\n      <section className=\"times\" >\n        <p className=\"minSecs\" >{`${minutes}:${seconds}`}.</p>\n        <p className=\"milliseconds\">{milliseconds}</p>\n      </section>\n    )\n    const inputter = (\n      <section className=\"input-time\">\n        <input\n        name=\"minutes\"\n          type=\"text\"\n          maxLength=\"2\"\n          value={minInput}\n          placeholder=\"Minutos\"\n          onChange={this.onChangeInput}\n          onFocus={this.onFocusSelect}\n          onBlur={this.onBlueInput} />\n        <p>:</p>\n        <input\n        name=\"seconds\"\n          maxLength=\"2\"\n          type=\"text\"\n          placeholder=\"Segundos\"\n          value={secInput}\n          onChange={this.onChangeInput}\n          onFocus={this.onFocusSelect}\n          onBlur={this.onBlueInput}\n        />\n      </section>\n    )\n    const parar = (\n      <p className=\"input-time-parar\" onClick={this.parar}>Parar</p>\n    )\n    const iniciar = (\n      <p\n        className=\"input-time-iniciar\"\n        onClick={() => this.iniciar()}>Iniciar\n      </p>\n    )\n    const reiniciar = (\n      <p\n        className=\"input-time-reiniciar\"\n        onClick={() => this.reiniciar()}>Reiniciar\n      </p>\n    )\n\n    const retomado = (\n      <p\n        className=\"input-time-retomar\"\n        onClick={() => this.retomar()}>Retomar\n      </p>\n    )\n\n    const zerado = (\n      <p\n        className=\"input-time-zerar\"\n        onClick={() => this.zerar()}>Zerar\n      </p>\n    )\n\n    return (\n        <>\n          <section className=\"logo\">\n            <img src={ logo } alt=\"teste\" srcset=\"\" />\n          </section>\n                <section className=\"main-time\">\n          {started ? timer : inputter}\n          <section className=\"menu-time\">\n            {retomar && retomado}\n            {!parado && parar }\n            {(!retomar && !started) && iniciar}\n            {reinicio && reiniciar}\n            <p className=\"input-time-resetar\" onClick={this.resetar}>Resetar</p>\n            {zerar && zerado}\n          </section>\n                </section>\n        </>\n    )\n  }\n}\n","import Relogio from './Relogio';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Relogio />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './fonts/dsDigital/DS-DIGIT.TTF'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}